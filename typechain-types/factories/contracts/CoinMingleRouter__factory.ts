/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CoinMingleRouter,
  CoinMingleRouterInterface,
} from "../../contracts/CoinMingleRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_coinMingleLPImplementation",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wrappedFTM",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DeadlinePassed",
    type: "error",
  },
  {
    inputs: [],
    name: "ExcessiveLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "HighSlippage",
    type: "error",
  },
  {
    inputs: [],
    name: "IdenticalAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPath",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWFTMPath",
    type: "error",
  },
  {
    inputs: [],
    name: "PairDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "PairExists",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    name: "PairCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenIN",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenInAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenOutAmount",
        type: "uint256",
      },
    ],
    name: "TokensSwapped",
    type: "event",
  },
  {
    inputs: [],
    name: "CoinMingleImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WrappedFTM",
    outputs: [
      {
        internalType: "contract IWFTM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountADesired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountBDesired",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountDesired",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityFTM",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountFTM",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allPairs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allPairsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    name: "getAmountsOutForLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountB",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenInAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenOutAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenInAmount",
        type: "uint256",
      },
    ],
    name: "getTokenInFor",
    outputs: [
      {
        internalType: "uint256",
        name: "_tokenOutAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_liquidity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidityFTM",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountFTM",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapFTMForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForFTM",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_path",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "_amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200296638038062002966833981016040819052620000349162000105565b6200003f3362000098565b600180556001600160a01b03821615806200006157506001600160a01b038116155b15620000805760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b0391821660a052166080526200013d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010057600080fd5b919050565b600080604083850312156200011957600080fd5b6200012483620000e8565b91506200013460208401620000e8565b90509250929050565b60805160a0516127af620001b76000396000818161037c01526120b2015260008181610128015281816102b701528181610475015281816105130152818161069c015281816106e0015281816107fe015281816109c101528181610a0201528181611052015281816110d0015261179f01526127af6000f3fe6080604052600436106101185760003560e01c8063884e8771116100a0578063af6f513811610064578063af6f51381461036a578063b8239ebb1461039e578063c9c65396146103be578063e6a43905146103de578063f2fde38b1461041f57600080fd5b8063884e8771146102d95780638da5cb5b146102f95780638f8b832514610317578063ab08ed5314610337578063abce83b71461034a57600080fd5b8063574f2ba3116100e7578063574f2ba31461023b578063696114e5146102505780636ed36f8814610270578063715018a614610290578063742c7487146102a557600080fd5b806304b9ab211461016d5780631e3dd18b146101a05780633e92d896146101d85780634881450a1461020657600080fd5b3661016857336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101665760405163e6c4247b60e01b815260040160405180910390fd5b005b600080fd5b34801561017957600080fd5b5061018d6101883660046122f9565b61043f565b6040519081526020015b60405180910390f35b3480156101ac57600080fd5b506101c06101bb36600461236c565b6105ec565b6040516001600160a01b039091168152602001610197565b6101eb6101e6366004612385565b610616565b60408051938452602084019290925290820152606001610197565b34801561021257600080fd5b50610226610221366004612385565b61098e565b60408051928352602083019190915201610197565b34801561024757600080fd5b5060035461018d565b34801561025c57600080fd5b5061022661026b3660046123cd565b610b4e565b34801561027c57600080fd5b506101eb61028b36600461240f565b610ccc565b34801561029c57600080fd5b50610166610f78565b3480156102b157600080fd5b506101c07f000000000000000000000000000000000000000000000000000000000000000081565b3480156102e557600080fd5b506102266102f4366004612476565b610f8c565b34801561030557600080fd5b506000546001600160a01b03166101c0565b34801561032357600080fd5b5061018d6103323660046122f9565b610fdf565b61018d6103453660046124d1565b611024565b34801561035657600080fd5b5061018d610365366004612538565b611165565b34801561037657600080fd5b506101c07f000000000000000000000000000000000000000000000000000000000000000081565b3480156103aa57600080fd5b5061018d6103b9366004612579565b6112f2565b3480156103ca57600080fd5b506101c06103d93660046125c5565b61157c565b3480156103ea57600080fd5b506101c06103f93660046125c5565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b34801561042b57600080fd5b5061016661043a3660046125fe565b6115a1565b600061044961161f565b814281101561046b5760405163387b2e5560e11b815260040160405180910390fd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001686866104a2600182612638565b8181106104b1576104b161264f565b90506020020160208101906104c691906125fe565b6001600160a01b0316146104ed57604051630bd346d360e31b815260040160405180910390fd5b6104fa8888888830611679565b604051632e1a7d4d60e01b8152600481018290529092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b505050506000846001600160a01b03168360405160006040518083038185875af1925050503d80600081146105c4576040519150601f19603f3d011682016040523d82523d6000602084013e6105c9565b606091505b50509050806105d757600080fd5b50506105e260018055565b9695505050505050565b600381815481106105fc57600080fd5b6000918252602090912001546001600160a01b0316905081565b600080600061062361161f565b83428110156106455760405163387b2e5560e11b815260040160405180910390fd5b6001600160a01b03881661066c5760405163e6c4247b60e01b815260040160405180910390fd5b34871580610678575080155b1561069657604051632ca2f52b60e11b815260040160405180910390fd5b6106c2897f00000000000000000000000000000000000000000000000000000000000000008a84611c17565b6001600160a01b03808c1660009081526002602090815260408083207f000000000000000000000000000000000000000000000000000000000000000085168085529252808320548151630d0e30db60e41b81529151969b509499509390921693919263d0e30db092899260048084019391929182900301818588803b15801561074b57600080fd5b505af115801561075f573d6000803e3d6000fd5b50506040516323b872dd60e01b81526001600160a01b038e1693506323b872dd92506107949150339085908b90600401612665565b6020604051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190612689565b5060405163a9059cbb60e01b81526001600160a01b038281166004830152602482018790527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610847573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086b9190612689565b506040516335313c2160e11b81526001600160a01b038981166004830152821690636a627842906024016020604051808303816000875af11580156108b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d891906126ab565b935084821115610940576000336108ef8785612638565b604051600081818185875af1925050503d806000811461092b576040519150601f19603f3d011682016040523d82523d6000602084013e610930565b606091505b505090508061093e57600080fd5b505b806001600160a01b031685877f0351f600ef1e31e5e13b4dc27bff4cbde3e9269f0ffc666629ae6cac573eb22060405160405180910390a450505061098460018055565b9450945094915050565b60008061099961161f565b82428110156109bb5760405163387b2e5560e11b815260040160405180910390fd5b6109e7877f00000000000000000000000000000000000000000000000000000000000000008830611d7c565b604051632e1a7d4d60e01b81526004810182905291945092507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610a4e57600080fd5b505af1158015610a62573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038881166004830152602482018790528a16925063a9059cbb91506044016020604051808303816000875af1158015610ab5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad99190612689565b506000856001600160a01b03168360405160006040518083038185875af1925050503d8060008114610b27576040519150601f19603f3d011682016040523d82523d6000602084013e610b2c565b606091505b5050905080610b3a57600080fd5b5050610b4560018055565b94509492505050565b60008084610b5b57610cc4565b6001600160a01b03808516600090815260026020908152604080832087851684529091529020541680610ba15760405163317f12fd60e21b815260040160405180910390fd5b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0591906126ab565b905080871115610c2857604051631fff968160e01b815260040160405180910390fd5b600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa158015610c68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8c91906126c4565b909250905082610c9c838b6126e8565b610ca69190612707565b955082610cb3828b6126e8565b610cbd9190612707565b9450505050505b935093915050565b6000806000610cd961161f565b8342811015610cfb5760405163387b2e5560e11b815260040160405180910390fd5b6001600160a01b038a161580610d1857506001600160a01b038916155b15610d365760405163e6c4247b60e01b815260040160405180910390fd5b871580610d41575086155b15610d5f57604051632ca2f52b60e11b815260040160405180910390fd5b610d6b8a8a8a8a611c17565b80945081955050506000600260008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060009054906101000a90046001600160a01b031690508a6001600160a01b03166323b872dd3383886040518463ffffffff1660e01b8152600401610e0393929190612665565b6020604051808303816000875af1158015610e22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e469190612689565b506040516323b872dd60e01b81526001600160a01b038b16906323b872dd90610e7790339085908990600401612665565b6020604051808303816000875af1158015610e96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eba9190612689565b506040516335313c2160e11b81526001600160a01b038881166004830152821690636a627842906024016020604051808303816000875af1158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2791906126ab565b9250806001600160a01b031684867f0351f600ef1e31e5e13b4dc27bff4cbde3e9269f0ffc666629ae6cac573eb22060405160405180910390a45050610f6c60018055565b96509650969350505050565b610f80611f09565b610f8a6000611f63565b565b600080610f9761161f565b8242811015610fb95760405163387b2e5560e11b815260040160405180910390fd5b610fc588888888611d7c565b9093509150610fd5905060018055565b9550959350505050565b6000610fe961161f565b814281101561100b5760405163387b2e5560e11b815260040160405180910390fd5b6110188888888888611679565b9150506105e260018055565b600061102e61161f565b81428110156110505760405163387b2e5560e11b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168686600081811061108d5761108d61264f565b90506020020160208101906110a291906125fe565b6001600160a01b0316146110c957604051630bd346d360e31b815260040160405180910390fd5b60003490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b15801561112957600080fd5b505af115801561113d573d6000803e3d6000fd5b505050505061114f8189898989611679565b9250505061115c60018055565b95945050505050565b6000816111855760405163162908e360e11b815260040160405180910390fd5b6001600160a01b038085166000908152600260209081526040808320878516845290915290205416806111cb5760405163317f12fd60e21b815260040160405180910390fd5b6000819050600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa158015611210573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123491906126c4565b91509150876001600160a01b0316836001600160a01b0316630fc63d106040518163ffffffff1660e01b8152600401602060405180830381865afa158015611280573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a49190612729565b6001600160a01b031614156112cf57816112be82886126e8565b6112c89190612707565b94506112e7565b806112da83886126e8565b6112e49190612707565b94505b505050509392505050565b6000836113125760405163395ee66b60e11b815260040160405180910390fd5b6002821015611334576040516320db826760e01b815260040160405180910390fd5b60005b611342600184612638565b811015611574576000600260008686858181106113615761136161264f565b905060200201602081019061137691906125fe565b6001600160a01b03166001600160a01b03168152602001908152602001600020600086868560016113a79190612746565b8181106113b6576113b661264f565b90506020020160208101906113cb91906125fe565b6001600160a01b039081168252602082019290925260400160002054169050806114085760405163317f12fd60e21b815260040160405180910390fd5b816114b957806001600160a01b031663ca706bcf86868581811061142e5761142e61264f565b905060200201602081019061144391906125fe565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101899052604401602060405180830381865afa15801561148e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b291906126ab565b9250611561565b806001600160a01b031663ca706bcf8686858181106114da576114da61264f565b90506020020160208101906114ef91906125fe565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101869052604401602060405180830381865afa15801561153a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155e91906126ab565b92505b508061156c8161275e565b915050611337565b509392505050565b600061158661161f565b6115908383611fb3565b905061159b60018055565b92915050565b6115a9611f09565b6001600160a01b0381166116135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61161c81611f63565b50565b600260015414156116725760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161160a565b6002600155565b6000600283101561169d576040516320db826760e01b815260040160405180910390fd5b6001600160a01b0382166116c45760405163e6c4247b60e01b815260040160405180910390fd5b60005b6116d2600185612638565b811015611a7d576000600260008787858181106116f1576116f161264f565b905060200201602081019061170691906125fe565b6001600160a01b03166001600160a01b03168152602001908152602001600020600087878560016117379190612746565b8181106117465761174661264f565b905060200201602081019061175b91906125fe565b6001600160a01b039081168252602082019290925260400160002054169050806117985760405163317f12fd60e21b815260040160405180910390fd5b81611961577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168686848181106117d9576117d961264f565b90506020020160208101906117ee91906125fe565b6001600160a01b0316141561190b5785858381811061180f5761180f61264f565b905060200201602081019061182491906125fe565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018b9052919091169063a9059cbb906044015b6020604051808303816000875af1158015611876573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189a9190612689565b50604051623438dd60e41b81523060048201526001600160a01b038216906303438dd0906024016020604051808303816000875af11580156118e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190491906126ab565b9250611a6a565b85858381811061191d5761191d61264f565b905060200201602081019061193291906125fe565b6001600160a01b03166323b872dd33838b6040518463ffffffff1660e01b815260040161185793929190612665565b8585838181106119735761197361264f565b905060200201602081019061198891906125fe565b60405163a9059cbb60e01b81526001600160a01b03838116600483015260248201869052919091169063a9059cbb906044016020604051808303816000875af11580156119d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fd9190612689565b50604051623438dd60e41b81523060048201526001600160a01b038216906303438dd0906024016020604051808303816000875af1158015611a43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a6791906126ab565b92505b5080611a758161275e565b9150506116c7565b5084811015611a9f57604051634c9b2c5960e01b815260040160405180910390fd5b6001600160a01b0382163014611b57578383611abc600182612638565b818110611acb57611acb61264f565b9050602002016020810190611ae091906125fe565b60405163a9059cbb60e01b81526001600160a01b03848116600483015260248201849052919091169063a9059cbb906044016020604051808303816000875af1158015611b31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b559190612689565b505b8383611b64600182612638565b818110611b7357611b7361264f565b9050602002016020810190611b8891906125fe565b6001600160a01b031684846000818110611ba457611ba461264f565b9050602002016020810190611bb991906125fe565b6001600160a01b0316836001600160a01b03167f631fb37dba9bbcb8b2f3be2d669e365ae9f1bd850cc57dfe8b7ccd7d979a2bba8985604051611c06929190918252602082015260400190565b60405180910390a495945050505050565b6001600160a01b0380851660009081526002602090815260408083208785168452909152812054909182911680611c5557611c528787611fb3565b90505b600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b81526004016040805180830381865afa158015611c95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb991906126c4565b91509150816000148015611ccb575080155b15611cdb57869450859350611d70565b6000611ce88a8a8a611165565b9050868111611d1a5780611d0f5760405163bb55fd2760e01b815260040160405180910390fd5b879550935083611d6e565b6000611d278a8c8a611165565b905080611d475760405163bb55fd2760e01b815260040160405180910390fd5b88811115611d685760405163cd1beb0960e01b815260040160405180910390fd5b95508694505b505b50505094509492505050565b60008083611d9d5760405163bb55fd2760e01b815260040160405180910390fd5b6001600160a01b03808716600090815260026020908152604080832089851684529091529020541680611de35760405163317f12fd60e21b815260040160405180910390fd5b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90611e1390339085908a90600401612665565b6020604051808303816000875af1158015611e32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e569190612689565b5060405163226bf2d160e21b81526001600160a01b0385811660048301528216906389afcb449060240160408051808303816000875af1158015611e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec291906126c4565b60405191945092506001600160a01b03821690839085907f0c54fc223ffd1a8f36652b5e83db4fff50f5ae151b11ceb56d5499b9f6e1fa1890600090a45094509492505050565b6000546001600160a01b03163314610f8a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161160a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000816001600160a01b0316836001600160a01b03161415611fe85760405163065af08d60e01b815260040160405180910390fd5b6001600160a01b038316158061200557506001600160a01b038216155b156120235760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b0383811660009081526002602090815260408083208685168452909152902054161561206957604051633d77e89160e01b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606085811b8216602084015284901b1660348201526000906048016040516020818303038152906040528051906020012090506120d77f0000000000000000000000000000000000000000000000000000000000000000826121fb565b60405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529193509083169063485cc95590604401600060405180830381600087803b15801561212657600080fd5b505af115801561213a573d6000803e3d6000fd5b5050506001600160a01b0380861660008181526002602081815260408084208a87168086529083528185208054978b166001600160a01b031998891681179091559383528185208686529092528084208054871684179055600380546001810182559085527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b018054909616831790955593519094507fa92a2b95c8d8436f6ac4c673c61487364f877efb9534d4296fad8ef904546c949190a45092915050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b1760205281603760096000f590506001600160a01b03811661159b5760405162461bcd60e51b815260206004820152601760248201527f455243313136373a2063726561746532206661696c6564000000000000000000604482015260640161160a565b60008083601f8401126122aa57600080fd5b50813567ffffffffffffffff8111156122c257600080fd5b6020830191508360208260051b85010111156122dd57600080fd5b9250929050565b6001600160a01b038116811461161c57600080fd5b60008060008060008060a0878903121561231257600080fd5b8635955060208701359450604087013567ffffffffffffffff81111561233757600080fd5b61234389828a01612298565b9095509350506060870135612357816122e4565b80925050608087013590509295509295509295565b60006020828403121561237e57600080fd5b5035919050565b6000806000806080858703121561239b57600080fd5b84356123a6816122e4565b93506020850135925060408501356123bd816122e4565b9396929550929360600135925050565b6000806000606084860312156123e257600080fd5b8335925060208401356123f4816122e4565b91506040840135612404816122e4565b809150509250925092565b60008060008060008060c0878903121561242857600080fd5b8635612433816122e4565b95506020870135612443816122e4565b945060408701359350606087013592506080870135612461816122e4565b8092505060a087013590509295509295509295565b600080600080600060a0868803121561248e57600080fd5b8535612499816122e4565b945060208601356124a9816122e4565b93506040860135925060608601356124c0816122e4565b949793965091946080013592915050565b6000806000806000608086880312156124e957600080fd5b85359450602086013567ffffffffffffffff81111561250757600080fd5b61251388828901612298565b9095509350506040860135612527816122e4565b949793965091946060013592915050565b60008060006060848603121561254d57600080fd5b8335612558816122e4565b92506020840135612568816122e4565b929592945050506040919091013590565b60008060006040848603121561258e57600080fd5b83359250602084013567ffffffffffffffff8111156125ac57600080fd5b6125b886828701612298565b9497909650939450505050565b600080604083850312156125d857600080fd5b82356125e3816122e4565b915060208301356125f3816122e4565b809150509250929050565b60006020828403121561261057600080fd5b813561261b816122e4565b9392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561264a5761264a612622565b500390565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b60006020828403121561269b57600080fd5b8151801515811461261b57600080fd5b6000602082840312156126bd57600080fd5b5051919050565b600080604083850312156126d757600080fd5b505080516020909101519092909150565b600081600019048311821515161561270257612702612622565b500290565b60008261272457634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561273b57600080fd5b815161261b816122e4565b6000821982111561275957612759612622565b500190565b600060001982141561277257612772612622565b506001019056fea2646970667358221220d62a44e32991e53a5eb3ce461492d3a01f20b8515a60c7c1525cbb1feb59da3864736f6c634300080a0033";

type CoinMingleRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CoinMingleRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CoinMingleRouter__factory extends ContractFactory {
  constructor(...args: CoinMingleRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _coinMingleLPImplementation: PromiseOrValue<string>,
    _wrappedFTM: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CoinMingleRouter> {
    return super.deploy(
      _coinMingleLPImplementation,
      _wrappedFTM,
      overrides || {}
    ) as Promise<CoinMingleRouter>;
  }
  override getDeployTransaction(
    _coinMingleLPImplementation: PromiseOrValue<string>,
    _wrappedFTM: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _coinMingleLPImplementation,
      _wrappedFTM,
      overrides || {}
    );
  }
  override attach(address: string): CoinMingleRouter {
    return super.attach(address) as CoinMingleRouter;
  }
  override connect(signer: Signer): CoinMingleRouter__factory {
    return super.connect(signer) as CoinMingleRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoinMingleRouterInterface {
    return new utils.Interface(_abi) as CoinMingleRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoinMingleRouter {
    return new Contract(address, _abi, signerOrProvider) as CoinMingleRouter;
  }
}
